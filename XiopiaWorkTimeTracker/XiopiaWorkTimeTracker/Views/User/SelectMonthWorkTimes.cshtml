@using XiopiaWorkTimeTracker.Models
@using Ressources
@model UserViewModel

<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<div class="jumbotron">
    <h1 class="panel-title">@Language.UserHeader @Model.CurrentMonth @Model.CurrentYear</h1>
    <p class="data-current-user-title">@Model.User.FirstName @Model.User.LastName</p>
    <nav class="navbar navbar-default">
        <button id="startNowBtn" type="button" class="btn btn-primary btn-lg">@Language.StartWorkNow</button>
        <button id="endNowBtn" type="button" class="btn btn-success btn-lg">@Language.EndWork</button>
        <button type="button" class="btn btn btn-warning btn-lg">@Language.ReportIllness</button>
        <button type="button" class="btn btn btn-info btn-lg">@Language.RequestHoloday</button>
    </nav>
</div>
<nav>
    <ul class="pagination">
        <li><a href="@Url.Action("SelectMonthWorkTimes", "User", new { month = 1})">@Language.January</a></li>
        <li><a href="@Url.Action("SelectMonthWorkTimes", "User", new { month = 2})">@Language.February</a></li>
        <li><a href="@Url.Action("SelectMonthWorkTimes", "User", new { month = 3})">@Language.March</a></li>
        <li><a href="@Url.Action("SelectMonthWorkTimes", "User", new { month = 4})">@Language.April</a></li>
        <li><a href="@Url.Action("SelectMonthWorkTimes", "User", new { month = 5})">@Language.Mai</a></li>
        <li><a href="@Url.Action("SelectMonthWorkTimes", "User", new { month = 6})">@Language.Juni</a></li>
        <li><a href="@Url.Action("SelectMonthWorkTimes", "User", new { month = 7})">@Language.July</a></li>
        <li><a href="@Url.Action("SelectMonthWorkTimes", "User", new { month = 8})">@Language.August</a></li>
        <li><a href="@Url.Action("SelectMonthWorkTimes", "User", new { month = 9})">@Language.September</a></li>
        <li><a href="@Url.Action("SelectMonthWorkTimes", "User", new { month = 10})">@Language.October</a></li>
        <li><a href="@Url.Action("SelectMonthWorkTimes", "User", new { month = 11})">@Language.November</a></li>
        <li><a href="@Url.Action("SelectMonthWorkTimes", "User", new { month = 12})">@Language.Dezember</a></li>
    </ul>
</nav>

<!--Modal Dialog-->
<!-- Modal HTML -->
<div id="myModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">@Language.NewWorkTime @DateTime.Now.ToString()</h4>
            </div>
            <div class="modal-body" id="client-detail-modal">
                @{Html.RenderPartial("StartRecordingNowDialog", Model);}
            </div>
        </div>
    </div>
</div>

<div id="tblWebGrid" class="container-fluid">
    <div class="row webGrid-header">
        <div class="col-sm-2 center-block">@Language.Date</div>
        <div class="col-sm-2 center-block">@Language.StartWork</div>
        <div class="col-sm-2 center-block">@Language.PauseInMin</div>
        <div class="col-sm-2 center-block">@Language.EndWork</div>
        <div class="col-sm-4 center-block">@Language.Project</div>
    </div>
    @foreach (var curDay in Model.WorkDays)
    {
        <div class="row  webGrid-row-style">
            <div class="col-sm-2 webGrid-Date date-dayofweek-@curDay.WorkDate.ToString("ddd")">@curDay.WorkDate.ToString("dd.MM. ddd")</div>
            <div class="col-sm-10 container-fluid date-dayofweek-@curDay.WorkDate.ToString("ddd")">
                @if (curDay.DataRow.Count == 0)
                {
                    <div class="row bg-info">
                        <div class="col-sm-3 webGrid-StartTime">00:00</div>
                        <div class="col-sm-2 webGrid-PauseLength">0</div>
                        <div class="col-sm-3 webGrid-EndTime">00:00</div>
                        <div class="col-sm-4 webGrid-Proj">&nbsp;</div>
                    </div>
                }
                else
                {
                    foreach (var curEntry in curDay.DataRow)
                    {
                        <div class="row">
                            @Html.Hidden(curEntry.EntryId.ToString())
                            <div class="col-sm-3 webGrid-StartTime center-block">@curEntry.StartTime.Trim()</div>
                            <div class="col-sm-2 webGrid-PauseLength center-block">@curEntry.PauseLength</div>
                            <div class="col-sm-3 webGrid-EndTime center-block">@curEntry.EndTime</div>
                            <div class="col-sm-4 webGrid-Proj center-block">@curEntry.Project</div>
                        </div>
                    }
                }
            </div>

        </div>
    }
</div>


<script>
    debugger;

    styleGrid();

    $("#startNowBtn").on("click", function (event) {
        $("#myModal").modal('show');
    })

    $("#endNowBtn").on("click", function () {
        event.preventDefault();
        var newProjData = { "UserId": @Model.User.Id, "Action": "EndWork" };
        $.ajax({
            type: "POST",
            url: "/User/ActionFromView",
            data: newProjData,
            datatype: "html",
            success: function (data) {
                switch(data)
                {
                    case 0:
                        window.location.replace("/User/SelectMonthWorkTimes/?month=@Model.WorkDay.Month.ToString()");
                        break;
                    case 1:
                        alert("You have multiple Projects started today !");
                        break;
                    case 2:
                        alert("You don't have started any Projects today !");
                        break;
                    default:
                        break;
                }
            },
            error: function () {
                alert("error");
            }
        });

    })

    $("#tblWebGrid").on("click", function(event){
        $("#tblWebGrid").unbind("click");
        var node = event.target;
        var nodeClasses = node.classList;
        var rowId = null;
        for(i=0; i<nodeClasses.length; i++)
        {
            if(nodeClasses[i] == "webGrid-PauseLength")
            {
                if(node.parentElement.firstElementChild.type == "hidden")
                {
                    rowId = node.parentElement.firstElementChild.name;
                }
                node.outerHTML = '<div class="col-sm-2 webGrid-PauseLength">\
                                        <input style="text-align: center;width:3em" type="text" id="editField" value="' + node.innerText + '"/>\
                                      </div>';
                $("#editField").on("blur", function(){
                    PostElementChange("Pause", rowId, $("#editField").val());
                })
                $("#editField").keyup(function(e){
                    if (e.which == 13)
                    {
                        PostElementChange("Pause", rowId, $("#editField").val());
                    }
                })
                break;
            }
        }
    })

    function PostElementChange(element, elementId, value)
    {
        var newProjData = { "UserId": @Model.User.Id, "Action": "ElementChange", "ElementId": elementId, "Element":element, "Value": value };
        $.ajax({
            type: "POST",
            url: "/User/ActionFromView",
            data: newProjData,
            datatype: "html",
            success: function (data) {
                switch(data)
                {
                    case 0:
                        window.location.replace("/User/SelectMonthWorkTimes/?month=@Model.WorkDay.Month.ToString()");
                        break;
                    case 1:
                        alert("You have multiple Projects started today !");
                        break;
                    case 2:
                        alert("You don't have started any Projects today !");
                        break;
                    default:
                        break;
                }
            },
            error: function () {
                alert("error");
            }
        });
    }


    function styleGrid() {
        $("#tblWebGrid tr:not(:first)").each(function () {
            var aptStatus = $(this).find("td:nth-child(1)").html();
            if (aptStatus != null) {
                if ((aptStatus.indexOf("Sa") >= 0) || (aptStatus.indexOf("So") >= 0)) {
                    $(this).find("td:nth-child(1)").addClass("clsRed");
                } else {
                    $(this).find("td:nth-child(1)").addClass("clsNormal");
                }
            }
        });
    }
</script>
